%%cu
#include<stdio.h>
#include<stdlib.h>

__global__ void fibinnaci(int *md, int *nd, int *pd)
{
 int fib[300];
	 fib[1]=1;
  fib[0]=0;
printf("0 1 ");
 for(int i=2;i<=300;i++)
 {
     fib[i]=fib[i-1]+fib[i-2];
    printf("%d ",fib[i]);
 }
 
}

int main()
{
	int size = 200 * sizeof(int);
	int m[200], n[200], p[200], *md, *nd, *pd;
	int i=0;
	
	for(i=0;i<200;i++)
	{
		m[i] = i;
		n[i] = i;
		p[i] = 0;
	}
	cudaMalloc(&md, size);
	cudaMemcpy(md, m, size, cudaMemcpyHostToDevice);
	
	cudaMalloc(&nd, size);
	cudaMemcpy(nd, n, size, cudaMemcpyHostToDevice);
	
	cudaMalloc(&pd, size);
	
	dim3 DimGrid(1,1);
	dim3 DimBlock(1,1);
	
	fibinnaci<<< DimGrid,DimBlock >>>(md,nd,pd);
	
	cudaMemcpy(p, pd, size, cudaMemcpyDeviceToHost);
	
	for(i=0;i<200;i++)
	{
		printf("\t%d",p[i]);
	}
	
	cudaFree(md);
	cudaFree(nd);
	cudaFree(pd);
	
}